{"version":3,"sources":["theme/theme.js","styles/GlobalStyle.js","components/TodoTemplate.js","contexts/todo.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","app/App.js","index.js"],"names":["calcRem","size","theme","colors","black","lightGray","gray","white","violet","pink","red","green","blue","fontSizes","small","base","lg","xl","xxl","xxxl","titleSize","paddings","margins","interval","GlobalStyle","createGlobalStyle","reset","TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","content","completed","todoReducer","state","action","type","todo","map","filter","Error","TodoStateContext","React","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","today","Date","day","getDay","leftTodos","toString","slice","className","length","CheckCircle","props","done","css","Text","Remove","TodoItemBlock","li","TodoItem","text","onClick","memo","TodoListBlock","ul","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","inputRef","useEffect","current","focus","useTodoNextId","onSubmit","e","preventDefault","placeholder","onChange","target","ref","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a899549.chunk.js","sourcesContent":["const calcRem = (size) => `${size / 16}rem`;\r\n\r\nconst colors = {\r\n  black: '#212529',\r\n  lightGray: '#e9ecef',\r\n  gray: '#dee2e6',\r\n  white: '#f8f9fa',\r\n  violet: '#a61e4d',\r\n  pink: '#e64980',\r\n  red: '#e03131',\r\n  green: '#40c057',\r\n  blue: '#339af0',\r\n};\r\n\r\nconst fontSizes = {\r\n  small: calcRem(14),\r\n  base: calcRem(16),\r\n  lg: calcRem(18),\r\n  xl: calcRem(20),\r\n  xxl: calcRem(24),\r\n  xxxl: calcRem(36),\r\n  titleSize: calcRem(50),\r\n};\r\n\r\nconst paddings = {\r\n  small: calcRem(16),\r\n  base: calcRem(32),\r\n  lg: calcRem(48),\r\n  xl: calcRem(64),\r\n  xxl: calcRem(80),\r\n  xxxl: calcRem(96),\r\n};\r\n\r\nconst margins = {\r\n  small: calcRem(16),\r\n  base: calcRem(32),\r\n  lg: calcRem(48),\r\n  xl: calcRem(64),\r\n  xxl: calcRem(80),\r\n  xxxl: calcRem(96),\r\n};\r\n\r\nconst interval = {\r\n  base: calcRem(50),\r\n  lg: calcRem(100),\r\n  xl: calcRem(150),\r\n  xxl: calcRem(200),\r\n};\r\n\r\nconst theme = {\r\n  colors,\r\n  fontSizes,\r\n  paddings,\r\n  margins,\r\n  interval,\r\n};\r\n\r\nexport default theme;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n  body {\r\n    background: ${({ theme }) => theme.colors.black};\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  position: relative;\r\n  width: 512px;\r\n  height: 768px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 1rem;\r\n  margin: 0 auto;\r\n  margin-top: ${({ theme }) => theme.interval.base};\r\n  box-shadow: 0 0 8px rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n}\r\n\r\nexport default TodoTemplate;\r\n","import React from 'react';\r\n\r\nconst initialTodos = [\r\n  { id: 1, content: 'HTML', completed: true },\r\n  { id: 2, content: 'CSS', completed: false },\r\n  { id: 3, content: 'JS', completed: false },\r\n  { id: 4, content: 'React', completed: false },\r\n];\r\n\r\nconst todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE':\r\n      return [...state, action.todo];\r\n    case 'TOGGLE':\r\n      return state.map((todo) =>\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      );\r\n    case 'REMOVE':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n\r\nconst TodoStateContext = React.createContext();\r\nconst TodoDispatchContext = React.createContext();\r\nconst TodoNextIdContext = React.createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n  const [state, dispatch] = React.useReducer(todoReducer, initialTodos);\r\n  const nextId = React.useRef(5);\r\n\r\n  return (\r\n    <TodoStateContext.Provider value={state}>\r\n      <TodoDispatchContext.Provider value={dispatch}>\r\n        <TodoNextIdContext.Provider value={nextId}>\r\n          {children}\r\n        </TodoNextIdContext.Provider>\r\n      </TodoDispatchContext.Provider>\r\n    </TodoStateContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useTodoState() {\r\n  const context = React.useContext(TodoStateContext);\r\n\r\n  // TodoProvider로 감싸지 않고, 커스텀 훅을 사용했을 경우 에러처리\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n  const context = React.useContext(TodoDispatchContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n  const context = React.useContext(TodoNextIdContext);\r\n  if (!context) {\r\n    throw new Error('Cannot find TodoProvider');\r\n  }\r\n  return context;\r\n}\r\n","import { useTodoState } from 'contexts/todo';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n  padding: ${({ theme }) =>\r\n    `${theme.paddings.lg} ${theme.paddings.base} ${theme.paddings.small}`};\r\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.gray}`};\r\n\r\n  time {\r\n    font-size: ${({ theme }) => theme.fontSizes.xxxl};\r\n    color: ${({ theme }) => theme.colors.black};\r\n    font-weight: bold;\r\n  }\r\n\r\n  .day {\r\n    display: block;\r\n    margin-top: ${({ theme }) => theme.margins.small};\r\n    color: ${({ theme }) => theme.colors.gray};\r\n    font-size: ${({ theme }) => theme.fontSizes.base};\r\n  }\r\n\r\n  .tasks-left {\r\n    color: ${({ theme }) => theme.colors.pink};\r\n    font-size: ${({ theme }) => theme.fontSizes.lg};\r\n    margin-top: ${({ theme }) => theme.margins.base};\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nfunction TodoHead() {\r\n  const today = new Date();\r\n  const day = today.getDay();\r\n  const week = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n\r\n  const todos = useTodoState();\r\n  const leftTodos = todos.filter((todo) => !todo.completed);\r\n\r\n  return (\r\n    <TodoHeadBlock>\r\n      <time>\r\n        {today.toString().slice(4, 15)}\r\n        <span className=\"day\">{week[day]}</span>\r\n      </time>\r\n      <div className=\"tasks-left\">To do left: {leftTodos.length}</div>\r\n    </TodoHeadBlock>\r\n  );\r\n}\r\n\r\nexport default TodoHead;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from 'contexts/todo';\r\n\r\nconst CheckCircle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  border: 1px solid ${({ theme }) => theme.colors.gray};\r\n  font-size: ${({ theme }) => theme.fontSizes.xxl};\r\n  margin-right: ${({ theme }) => theme.margins.small};\r\n  cursor: pointer;\r\n\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid ${({ theme }) => theme.colors.green};\r\n      color: ${({ theme }) => theme.colors.green};\r\n    `}\r\n`;\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: ${({ theme }) => theme.fontSizes.xl};\r\n  color: ${({ theme }) => theme.colors.black};\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      color: ${({ theme }) => theme.colors.gray};\r\n    `}\r\n`;\r\nconst Remove = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.gray};\r\n  font-size: ${({ theme }) => theme.fontSizes.xxl};\r\n  &:hover {\r\n    color: ${({ theme }) => theme.colors.red};\r\n  }\r\n`;\r\nconst TodoItemBlock = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: ${({ theme }) => theme.paddings.small} 0;\r\n  &:hover {\r\n    ${Remove} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction TodoItem({ id, done, text }) {\r\n  const dispatch = useTodoDispatch();\r\n\r\n  const onToggle = () => dispatch({ type: 'TOGGLE', id });\r\n  const onRemove = () => dispatch({ type: 'REMOVE', id });\r\n\r\n  return (\r\n    <TodoItemBlock key={id} id={id}>\r\n      <CheckCircle done={done} onClick={onToggle}>\r\n        {done && <MdDone />}\r\n      </CheckCircle>\r\n      <Text done={done}>{text}</Text>\r\n      <Remove onClick={onRemove}>\r\n        <MdDelete />\r\n      </Remove>\r\n    </TodoItemBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoItem);\r\n","import { useTodoState } from 'contexts/todo';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListBlock = styled.ul`\r\n  flex: 1;\r\n  padding: ${({ theme }) =>\r\n    `${theme.paddings.small} ${theme.paddings.base} ${theme.paddings.lg}`};\r\n  overflow-y: auto;\r\n  /* background-color: ${({ theme }) => theme.colors.gray}; */\r\n`;\r\n\r\nfunction TodoList() {\r\n  const todos = useTodoState();\r\n\r\n  return (\r\n    <TodoListBlock>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          id={todo.id}\r\n          text={todo.content}\r\n          done={todo.completed}\r\n        />\r\n      ))}\r\n    </TodoListBlock>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from 'contexts/todo';\r\n\r\nconst CircleButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0;\r\n  transform: translate(-50%, 50%);\r\n\r\n  width: 80px;\r\n  height: 80px;\r\n  cursor: pointer;\r\n  z-index: 5;\r\n  font-size: ${({ theme }) => theme.fontSizes.titleSize};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50%;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  background: ${({ theme }) => theme.colors.green};\r\n  transition: 0.125s all ease-in;\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.blue};\r\n  }\r\n  &:active {\r\n    background: ${({ theme }) => theme.colors.green};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.open &&\r\n    css`\r\n      background: ${({ theme }) => theme.colors.red};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.colors.violet};\r\n      }\r\n      &:active {\r\n        background: ${({ theme }) => theme.colors.red};\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: ${({ theme }) => theme.colors.lightGray};\r\n  padding: ${({ theme }) => theme.paddings.base};\r\n  padding-bottom: ${({ theme }) => theme.paddings.xl};\r\n  border-bottom-left-radius: 1rem;\r\n  border-bottom-right-radius: 1rem;\r\n  border-top: 1px solid ${({ theme }) => theme.colors.gray};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: ${({ theme }) => theme.paddings.small};\r\n  border-radius: 4px;\r\n  border: 1px solid ${({ theme }) => theme.colors.gray};\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: ${({ theme }) => theme.fontSizes.lg};\r\n`;\r\n\r\nfunction TodoCreate() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState('');\r\n  const inputRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    if (open) inputRef.current.focus();\r\n  }, [open]);\r\n\r\n  const onToggle = () => setOpen(!open);\r\n  const dispatch = useTodoDispatch();\r\n  const nextId = useTodoNextId();\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: 'CREATE',\r\n      todo: { id: nextId.current, content: value, completed: false },\r\n    });\r\n    nextId.current += 1;\r\n    setValue('');\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <InsertFormPositioner>\r\n          <InsertForm onSubmit={onSubmit}>\r\n            <Input\r\n              placeholder=\"Enter your to-do!\"\r\n              onChange={onChange}\r\n              value={value}\r\n              ref={inputRef}\r\n            />\r\n          </InsertForm>\r\n        </InsertFormPositioner>\r\n      )}\r\n      <CircleButton onClick={onToggle} open={open}>\r\n        <MdAdd />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(TodoCreate);\r\n","import { ThemeProvider } from 'styled-components';\r\nimport theme from 'theme/theme';\r\nimport GlobalStyle from 'styles/GlobalStyle';\r\nimport TodoTemplate from 'components/TodoTemplate';\r\nimport TodoHead from 'components/TodoHead';\r\nimport TodoList from 'components/TodoList';\r\nimport TodoCreate from 'components/TodoCreate';\r\nimport { TodoProvider } from 'contexts/todo';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <TodoProvider>\r\n        <TodoTemplate>\r\n          <TodoHead />\r\n          <TodoList />\r\n          <TodoCreate />\r\n        </TodoTemplate>\r\n      </TodoProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport './styles/index.scss'\n\nimport App from './app/App'\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}